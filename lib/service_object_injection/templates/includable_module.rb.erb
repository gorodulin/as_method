
module <%= module_name %>

  @injectable_method = "<%= method_name %>"
  @injectable_object = <%= object %>

  def self.ruby2_keywords(*); end if RUBY_VERSION < "2.7"

  ruby2_keywords def <%= method_name %>(*args, &block)
    ::<%= object %>::Stubbable.call(*args, &block)
  end

  <%= method_access %> :<%= method_name %>

  def self.included(base)
    stubbable_module_name = "::<%= object %>::Stubbable"
    return if Object.const_defined?(stubbable_module_name)
    ::ServiceObjectInjection::FindOrCreateModule.call \
      module_name: stubbable_module_name,
      module_template: "",
      vars: { object: base }
  end

end
